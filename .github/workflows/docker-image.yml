name: Docker image CI

env:
  REGISTRY: ghcr.io

on:
  push:
    branches:
    - main
    - master
    - default
    - develop
    tags:
    - release-*
  pull_request:
    branches:
    - main
    - master
    - default
    - develop
  workflow_dispatch:

jobs:
  docker_image:
    name: Push Docker image
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps: 
    - name: Check out the repo
      uses: actions/checkout@v4.2.2

    - name: Log in to Docker Hub
      uses: docker/login-action@v3.3.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.ACTOR }}
        password: ${{ secrets.GITHUB_TOKEN }}
        # username: ${{ secrets.DOCKER_USERNAME }}
        # password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5.5.1
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository }}

    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@v6.9.0
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v1.4.4
      with:
        subject-name: ${{ env.REGISTRY }}/${{ github.repository }}
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true

  helm_chart:
    name: Push helm chart
    runs-on: ubuntu-latest
    needs: [docker_image]
    if: ${{ ! startsWith(github.ref_name, 'release-') }}
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps: 
    - name: Check out the repo
      uses: actions/checkout@v4.2.2

    - run: echo "APP_NAME=$(echo ${{ github.repository }} | cut -d'/' -f2)" >> $GITHUB_ENV
    - run: sed -i "s/\[app-name\]/$APP_NAME/g" helm/Chart.yaml
    - run: if ${{ github.ref_name }} =~ "release-"; then echo "APP_VERSION=$(echo ${{ github.ref_name }}" >> $GITHUB_ENV else echo "APP_VERSION=v0.0.0" >> $GITHUB_ENV fi 
    - run: sed -i 's/\[app-version\]/$APP_VERSION/g' helm/Chart.yaml
    - run: helm package helm
    - run: echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ${{ env.REGISTRY }}/${{ github.ACTOR }} --username ${{ github.ACTOR }} --password-stdin
    - run: ls
    - run: helm push ./"$APP_NAME"-v0.0.1.tgz oci://${{ env.REGISTRY }}/${{ github.ACTOR }}